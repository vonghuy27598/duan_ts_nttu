@model AppTS.ViewModels.HocSinh_TK
@{
    ViewBag.Title = "DangKyNganh";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
</style>
<link href="~/Content/css/dangnhap.css" rel="stylesheet" />
<!--kiểm tra việc nhập password-->
<script type="text/javascript">
    var check = function () {
        if (document.getElementById('password').value ==
            document.getElementById('confirm_password').value) {
            document.getElementById('confirm_password').style.borderColor = 'green';
            document.getElementById('confirm_password').style.outline = 'none';
            document.getElementById('confirm_password').setCustomValidity("");
        } else {
            document.getElementById('confirm_password').style.borderColor = 'red';
            document.getElementById('confirm_password').style.outline = 'none';
            document.getElementById('confirm_password').setCustomValidity("Nhập lại mật khẩu không đúng");
        }
    }
    var user = function () {
        document.getElementById('tn').style.color = 'red';
        document.getElementById('tn').innerHTML = 'Tài khoản đã được sử dụng';
    }

    var input = document.getElementById('thongbao');
    input.oninvalid = function (event) {
        event.target.setCustomValidity('Vui lòng nhập thông tin');
    }



</script>
<script>

</script>
<div class="primari-box registered-account dn">
    <form class="new-account-box" id="accountLogin" method="post" action="#">
        <h3 class="box-subheading">Đăng ký</h3>
        <hr style="border: 1px solid; width: 100px;margin-bottom:35px" />
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)
            <div class="form-content">
                <h4>Thông tin cá nhân</h4>
                <div class="form-group primary-form-group">
                    <label for="HOTENHS">Họ tên</label>
                    @Html.TextBoxFor(m => m.HOTENHS, null, new { title = "Vui lòng nhập thông tin", id = "thongbao1", required = "required", @class = " input-feild line-animation" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="DIACHI">Địa chỉ</label>
                    @Html.TextBoxFor(m => m.DIACHI, null, new { required = "required", @class = " input-feild line-animation" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="TRUONGCAP3">Trường(THPT)</label>
                    @Html.TextBoxFor(m => m.TRUONGCAP3, null, new { title = "Vui lòng nhập thông tin", id = "thongbao1", required = "required", @class = " input-feild line-animation" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="SDT">Số điện thoại</label>
                    @Html.TextBoxFor(m => m.SDT, null, new { required = "required", title = "LabourCost is requried", @class = " input-feild line-animation", type = "tel", maxlength = "10", pattern = "[0-9]{10}" })
                    <div class="line"></div>
                </div>
                <h4 style="margin-top:35px">Đăng ký ngành học</h4>
                <div class="form-group primary-form-group">
                    <label for="CKN">Chọn khối ngành</label>
                    <!--dropdown-->
                    @Html.TextBoxFor(m => m.SDT, null, new { required = "required", title = "LabourCost is requried", @class = " input-feild line-animation", type = "tel", maxlength = "10", pattern = "[0-9]{10}" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="CN">Tên ngành</label>
                    <!--dropdown-->
                    @Html.TextBoxFor(m => m.SDT, null, new { required = "required", title = "LabourCost is requried", @class = " input-feild line-animation", type = "tel", maxlength = "10", pattern = "[0-9]{10}" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="TH">Tổ hợp xét tuyển</label>
                    <!--dropdown-->
                    @Html.TextBoxFor(m => m.SDT, null, new { required = "required", title = "LabourCost is requried", @class = " input-feild line-animation", type = "tel", maxlength = "10", pattern = "[0-9]{10}" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="M1">Điểm môn 1</label>
                    @Html.TextBoxFor(m => m.SDT, null, new { required = "required", title = "LabourCost is requried", @class = " input-feild line-animation", type = "tel", maxlength = "10", pattern = "[0-9]{10}" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="M2">Điểm môn 2</label>
                    @Html.TextBoxFor(m => m.SDT, null, new { required = "required", title = "LabourCost is requried", @class = " input-feild line-animation", type = "tel", maxlength = "10", pattern = "[0-9]{10}" })
                    <div class="line"></div>
                </div>
                <div class="form-group primary-form-group">
                    <label for="M3">Điểm môn 3</label>
                    @Html.TextBoxFor(m => m.SDT, null, new { required = "required", title = "LabourCost is requried", @class = " input-feild line-animation", type = "tel", maxlength = "10", pattern = "[0-9]{10}" })
                    <div class="line"></div>
                </div>

                <div class="submit-button">
                    <input type="submit" value="Đăng ký" id="signinCreate" class="btn main-btn" />
                </div>
            </div>
        }
    </form>

</div>

<script>
    var myInput = document.getElementById("password");
    var letter = document.getElementById("letter");
    var capital = document.getElementById("capital");
    var number = document.getElementById("number");
    var length = document.getElementById("length");
    var bool_letter = Boolean(false);
    var bool_capital = Boolean(false);
    var bool_number = Boolean(false);
    var bool_length = Boolean(false);
    // When the user clicks on the password field, show the message box
    myInput.onfocus = function () {
        document.getElementById("message").style.display = "block";
    }

    // When the user clicks outside of the password field, hide the message box
    myInput.onblur = function () {
        document.getElementById("message").style.display = "none";
    }

    // When the user starts to type something inside the password field
    myInput.onkeyup = function () {
        // Validate lowercase letters
        var lowerCaseLetters = /[a-z]/g;
        if (myInput.value.match(lowerCaseLetters)) {
            letter.classList.remove("invalid");
            letter.classList.add("valid");
            document.getElementById('password').setCustomValidity("");
            bool_letter = true;
        } else {
            letter.classList.remove("valid");
            letter.classList.add("invalid");
            bool_letter = false;
        }

        // Validate capital letters
        var upperCaseLetters = /[A-Z]/g;
        if (myInput.value.match(upperCaseLetters)) {
            capital.classList.remove("invalid");
            capital.classList.add("valid");
            bool_capital = true;
        } else {
            capital.classList.remove("valid");
            capital.classList.add("invalid");
            bool_capital = false;
        }

        // Validate numbers
        var numbers = /[0-9]/g;
        if (myInput.value.match(numbers)) {
            number.classList.remove("invalid");
            number.classList.add("valid");
            bool_number = true;
        } else {
            number.classList.remove("valid");
            number.classList.add("invalid");
            bool_number = false;
        }

        // Validate length
        if (myInput.value.length >= 8) {
            length.classList.remove("invalid");
            length.classList.add("valid");
            bool_length = true;
        } else {
            length.classList.remove("valid");
            length.classList.add("invalid");
            bool_length = false;
        }

        if (!bool_letter || !bool_capital || !bool_length || !bool_number) {
            document.getElementById('password').setCustomValidity("Vui lòng nhập đúng định dạng yêu cầu");
        }
    }
</script>

